// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tests the LandingPage component renders LandingPage component properly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "height": 1334,
    }
  }
  virtual={undefined}
>
  <View
    borderType="regular"
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderColor": "#D9D5DC",
        "borderLeftWidth": 0,
        "borderRightWidth": 0,
        "borderTopWidth": 0,
        "borderWidth": 0.5,
        "flexDirection": "row",
        "paddingLeft": 5,
      }
    }
    virtual={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 12,
          },
          Object {
            "color": "#68BAA7",
            "fontSize": 24,
            "paddingLeft": 5,
            "paddingRight": 5,
          },
          Object {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
      virtual={undefined}
    >
      Ôçµ
    </Text>
    <TextInput
      editable={true}
      onChangeText={[Function]}
      placeholder="Search"
      placeholderTextColor="#575757"
      style={
        Object {
          "color": "#000",
          "flex": 1,
          "fontSize": 17,
          "height": 50,
          "lineHeight": 24,
          "paddingLeft": 5,
          "paddingRight": 5,
        }
      }
      underlineColorAndroid="rgba(0,0,0,0)"
      virtual={undefined}
    />
  </View>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      dataSource={
        ListViewDataSource {
          "items": 0,
        }
      }
      enableEmptySections={true}
      renderRow={[Function]}
      renderScrollComponent={[Function]}
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "flex": 1,
        }
      }
    >
      <View />
    </RCTScrollView>
  </View>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-start",
          "margin": 20,
        }
      }
    >
      <View
        danger={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0,0,0,0.8)",
            "borderRadius": 5,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "minHeight": 50,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          }
        }
        success={false}
        virtual={undefined}
        warning={false}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#fff",
              "fontFamily": "System",
              "fontSize": 16,
            }
          }
          virtual={undefined}
        />
      </View>
    </View>
  </Modal>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0.4)",
          "flex": 1,
          "justifyContent": "flex-end",
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        isTVSelectable={true}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#fff",
            "elevation": 4,
            "height": NaN,
            "opacity": 1,
            "padding": 15,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#757575",
              "fontFamily": "System",
              "fontSize": 16,
            }
          }
          virtual={undefined}
        />
        <RCTScrollView
          dataArray={Array []}
          dataSource={
            ListViewDataSource {
              "items": 0,
            }
          }
          enableEmptySections={true}
          renderRow={[Function]}
          renderScrollComponent={[Function]}
          style={
            Object {
              "marginHorizontal": -15,
              "marginTop": 15,
            }
          }
          virtual={undefined}
        >
          <View />
        </RCTScrollView>
      </View>
    </View>
  </Modal>
</View>
`;
